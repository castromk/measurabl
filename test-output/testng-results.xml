<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="23" passed="23">
  <reporter-output>
  </reporter-output>
  <suite name="Measurable-form-Suite" duration-ms="135897" started-at="2021-08-30T12:31:13Z" finished-at="2021-08-30T12:33:29Z">
    <groups>
    </groups>
    <test name="form-MediaTest" duration-ms="135897" started-at="2021-08-30T12:31:13Z" finished-at="2021-08-30T12:33:29Z">
      <class name="tests.RadioBtnTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="1655" started-at="2021-08-30T12:31:13Z" finished-at="2021-08-30T12:31:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEnegrylblChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyEnegrylblChk" duration-ms="963" started-at="2021-08-30T12:31:15Z" description="Verify whether user is able to select every radio button of energy form" data-provider="energylbl" finished-at="2021-08-30T12:31:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that will select "Energy"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnegrylblChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1116" started-at="2021-08-30T12:31:16Z" finished-at="2021-08-30T12:31:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4255" started-at="2021-08-30T12:31:17Z" finished-at="2021-08-30T12:31:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEnegrylblChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyEnegrylblChk" duration-ms="425" started-at="2021-08-30T12:31:21Z" description="Verify whether user is able to select every radio button of energy form" data-provider="energylbl" finished-at="2021-08-30T12:31:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that will select "Energy"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Water]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnegrylblChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1110" started-at="2021-08-30T12:31:22Z" finished-at="2021-08-30T12:31:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4330" started-at="2021-08-30T12:31:23Z" finished-at="2021-08-30T12:31:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEnegrylblChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyEnegrylblChk" duration-ms="474" started-at="2021-08-30T12:31:27Z" description="Verify whether user is able to select every radio button of energy form" data-provider="energylbl" finished-at="2021-08-30T12:31:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that will select "Energy"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Energy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnegrylblChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1152" started-at="2021-08-30T12:31:27Z" finished-at="2021-08-30T12:31:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4293" started-at="2021-08-30T12:31:29Z" finished-at="2021-08-30T12:31:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEnegrylblChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyEnegrylblChk" duration-ms="475" started-at="2021-08-30T12:31:33Z" description="Verify whether user is able to select every radio button of energy form" data-provider="energylbl" finished-at="2021-08-30T12:31:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that will select "Energy"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Waste]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnegrylblChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1182" started-at="2021-08-30T12:31:33Z" finished-at="2021-08-30T12:31:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4155" started-at="2021-08-30T12:31:35Z" finished-at="2021-08-30T12:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEngeryCombinationRadioBtnChk(java.util.HashMap)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyEngeryCombinationRadioBtnChk" duration-ms="872" started-at="2021-08-30T12:31:39Z" description="Verify whether user is able to select different set of energry label" data-provider="energyCombination" finished-at="2021-08-30T12:31:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Water=Yes, Energy=Maybe, Waste=No}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEngeryCombinationRadioBtnChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1097" started-at="2021-08-30T12:31:40Z" finished-at="2021-08-30T12:31:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4234" started-at="2021-08-30T12:31:41Z" finished-at="2021-08-30T12:31:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEngeryCombinationRadioBtnChk(java.util.HashMap)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyEngeryCombinationRadioBtnChk" duration-ms="986" started-at="2021-08-30T12:31:45Z" description="Verify whether user is able to select different set of energry label" data-provider="energyCombination" finished-at="2021-08-30T12:31:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Water=Yes, Energy=No, Waste=Maybe}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEngeryCombinationRadioBtnChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1181" started-at="2021-08-30T12:31:46Z" finished-at="2021-08-30T12:31:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4497" started-at="2021-08-30T12:31:47Z" finished-at="2021-08-30T12:31:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEngeryCombinationRadioBtnChk(java.util.HashMap)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyEngeryCombinationRadioBtnChk" duration-ms="641" started-at="2021-08-30T12:31:52Z" description="Verify whether user is able to select different set of energry label" data-provider="energyCombination" finished-at="2021-08-30T12:31:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Water=Maybe, Energy=No, Waste=Yes}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEngeryCombinationRadioBtnChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1105" started-at="2021-08-30T12:31:52Z" finished-at="2021-08-30T12:31:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4318" started-at="2021-08-30T12:31:53Z" finished-at="2021-08-30T12:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyScoreChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyScoreChk" duration-ms="442" started-at="2021-08-30T12:31:58Z" description="Verify whether user is able to select every radio button of score form" data-provider="scorelbl" finished-at="2021-08-30T12:31:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that selects the score "4"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScoreChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1162" started-at="2021-08-30T12:31:58Z" finished-at="2021-08-30T12:31:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4271" started-at="2021-08-30T12:31:59Z" finished-at="2021-08-30T12:32:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyScoreChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyScoreChk" duration-ms="436" started-at="2021-08-30T12:32:04Z" description="Verify whether user is able to select every radio button of score form" data-provider="scorelbl" finished-at="2021-08-30T12:32:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that selects the score "4"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScoreChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1104" started-at="2021-08-30T12:32:04Z" finished-at="2021-08-30T12:32:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4332" started-at="2021-08-30T12:32:05Z" finished-at="2021-08-30T12:32:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyScoreChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyScoreChk" duration-ms="481" started-at="2021-08-30T12:32:10Z" description="Verify whether user is able to select every radio button of score form" data-provider="scorelbl" finished-at="2021-08-30T12:32:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that selects the score "4"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScoreChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1124" started-at="2021-08-30T12:32:10Z" finished-at="2021-08-30T12:32:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="beforeMethod" is-config="true" duration-ms="4256" started-at="2021-08-30T12:32:11Z" finished-at="2021-08-30T12:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyScoreChk(java.lang.String, java.lang.String)[pri:0, instance:tests.RadioBtnTest@3da30852]" name="verifyScoreChk" duration-ms="436" started-at="2021-08-30T12:32:15Z" description="Verify whether user is able to select every radio button of score form" data-provider="scorelbl" finished-at="2021-08-30T12:32:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that selects the score "4"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScoreChk -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.RadioBtnTest@3da30852]" name="afterMethod" is-config="true" duration-ms="1119" started-at="2021-08-30T12:32:16Z" finished-at="2021-08-30T12:32:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.RadioBtnTest -->
      <class name="tests.UICheckTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.UICheckTest@6995bf68]" name="beforeMethod" is-config="true" duration-ms="4222" started-at="2021-08-30T12:33:24Z" finished-at="2021-08-30T12:33:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyFormPageUI()[pri:0, instance:tests.UICheckTest@6995bf68]" name="verifyFormPageUI" duration-ms="3" started-at="2021-08-30T12:33:28Z" description="Verify the UI of form Page" finished-at="2021-08-30T12:33:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFormPageUI -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.UICheckTest@6995bf68]" name="afterMethod" is-config="true" duration-ms="1189" started-at="2021-08-30T12:33:28Z" finished-at="2021-08-30T12:33:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.UICheckTest -->
      <class name="tests.InputTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.InputTest@4c51cf28]" name="beforeMethod" is-config="true" duration-ms="4272" started-at="2021-08-30T12:33:12Z" finished-at="2021-08-30T12:33:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAsciiCharacterInput()[pri:0, instance:tests.InputTest@4c51cf28]" name="verifyAsciiCharacterInput" duration-ms="27" started-at="2021-08-30T12:33:16Z" description="Verify whether user is able to enter ascii charcter or not" finished-at="2021-08-30T12:33:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAsciiCharacterInput -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.InputTest@4c51cf28]" name="afterMethod" is-config="true" duration-ms="1160" started-at="2021-08-30T12:33:16Z" finished-at="2021-08-30T12:33:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.InputTest@4c51cf28]" name="beforeMethod" is-config="true" duration-ms="4119" started-at="2021-08-30T12:33:17Z" finished-at="2021-08-30T12:33:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyDateInput()[pri:0, instance:tests.InputTest@4c51cf28]" name="verifyDateInput" duration-ms="926" started-at="2021-08-30T12:33:22Z" description="verify whether user is able to enter date or not in date input" finished-at="2021-08-30T12:33:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDateInput -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.InputTest@4c51cf28]" name="afterMethod" is-config="true" duration-ms="1140" started-at="2021-08-30T12:33:22Z" finished-at="2021-08-30T12:33:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.InputTest -->
      <class name="tests.ChkBoxTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="beforeMethod" is-config="true" duration-ms="4163" started-at="2021-08-30T12:32:17Z" finished-at="2021-08-30T12:32:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCityChkBoxSelection(java.lang.String, java.lang.String)[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="verifyCityChkBoxSelection" duration-ms="522" started-at="2021-08-30T12:32:21Z" description="Verify whether user is able to select given city or not" data-provider="cityChk" finished-at="2021-08-30T12:32:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that randomly selects an checkbox and mandatory selects "Los Angeles" checkbox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Los Angeles]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCityChkBoxSelection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="afterMethod" is-config="true" duration-ms="1116" started-at="2021-08-30T12:32:22Z" finished-at="2021-08-30T12:32:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="beforeMethod" is-config="true" duration-ms="4244" started-at="2021-08-30T12:32:23Z" finished-at="2021-08-30T12:32:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCityChkBoxSelection(java.lang.String, java.lang.String)[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="verifyCityChkBoxSelection" duration-ms="415" started-at="2021-08-30T12:32:27Z" description="Verify whether user is able to select given city or not" data-provider="cityChk" finished-at="2021-08-30T12:32:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that randomly selects an checkbox and mandatory selects "Los Angeles" checkbox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCityChkBoxSelection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="afterMethod" is-config="true" duration-ms="1163" started-at="2021-08-30T12:32:27Z" finished-at="2021-08-30T12:32:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="beforeMethod" is-config="true" duration-ms="4257" started-at="2021-08-30T12:32:29Z" finished-at="2021-08-30T12:32:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCityChkBoxSelection(java.lang.String, java.lang.String)[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="verifyCityChkBoxSelection" duration-ms="455" started-at="2021-08-30T12:32:33Z" description="Verify whether user is able to select given city or not" data-provider="cityChk" finished-at="2021-08-30T12:32:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create a script that randomly selects an checkbox and mandatory selects "Los Angeles" checkbox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New York]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCityChkBoxSelection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="afterMethod" is-config="true" duration-ms="1138" started-at="2021-08-30T12:32:33Z" finished-at="2021-08-30T12:32:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="beforeMethod" is-config="true" duration-ms="4211" started-at="2021-08-30T12:32:35Z" finished-at="2021-08-30T12:32:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEnergyCombinationChkBox(java.util.HashMap)[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="verifyEnergyCombinationChkBox" duration-ms="798" started-at="2021-08-30T12:32:39Z" description="Verify whether user is able to check different set of energry label" data-provider="energyCombinationCheckBox" finished-at="2021-08-30T12:32:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Water=Yes, Energy=Maybe, Waste=No}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnergyCombinationChkBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="afterMethod" is-config="true" duration-ms="1107" started-at="2021-08-30T12:32:40Z" finished-at="2021-08-30T12:32:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="beforeMethod" is-config="true" duration-ms="4176" started-at="2021-08-30T12:32:41Z" finished-at="2021-08-30T12:32:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEnergyCombinationChkBox(java.util.HashMap)[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="verifyEnergyCombinationChkBox" duration-ms="868" started-at="2021-08-30T12:32:45Z" description="Verify whether user is able to check different set of energry label" data-provider="energyCombinationCheckBox" finished-at="2021-08-30T12:32:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Water=Yes, Energy=No, Waste=Maybe}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnergyCombinationChkBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="afterMethod" is-config="true" duration-ms="1111" started-at="2021-08-30T12:32:46Z" finished-at="2021-08-30T12:32:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="beforeMethod" is-config="true" duration-ms="4212" started-at="2021-08-30T12:32:47Z" finished-at="2021-08-30T12:32:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyEnergyCombinationChkBox(java.util.HashMap)[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="verifyEnergyCombinationChkBox" duration-ms="835" started-at="2021-08-30T12:32:51Z" description="Verify whether user is able to check different set of energry label" data-provider="energyCombinationCheckBox" finished-at="2021-08-30T12:32:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Water=Maybe, Energy=No, Waste=Yes}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnergyCombinationChkBox -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.ChkBoxTest@403f0a22]" name="afterMethod" is-config="true" duration-ms="1124" started-at="2021-08-30T12:32:52Z" finished-at="2021-08-30T12:32:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.ChkBoxTest -->
      <class name="tests.DropDwnTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.DropDwnTest@503ecb24]" name="beforeMethod" is-config="true" duration-ms="4109" started-at="2021-08-30T12:32:53Z" finished-at="2021-08-30T12:32:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyDropDownTest(java.lang.String)[pri:0, instance:tests.DropDwnTest@503ecb24]" name="verifyDropDownTest" duration-ms="714" started-at="2021-08-30T12:32:57Z" description="verify whether user is able to select dropdown options or not" data-provider="dropdownOptions" finished-at="2021-08-30T12:32:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Water]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.DropDwnTest@503ecb24]" name="afterMethod" is-config="true" duration-ms="1093" started-at="2021-08-30T12:32:58Z" finished-at="2021-08-30T12:32:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.DropDwnTest@503ecb24]" name="beforeMethod" is-config="true" duration-ms="4207" started-at="2021-08-30T12:32:59Z" finished-at="2021-08-30T12:33:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyDropDownTest(java.lang.String)[pri:0, instance:tests.DropDwnTest@503ecb24]" name="verifyDropDownTest" duration-ms="734" started-at="2021-08-30T12:33:03Z" description="verify whether user is able to select dropdown options or not" data-provider="dropdownOptions" finished-at="2021-08-30T12:33:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Energy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.DropDwnTest@503ecb24]" name="afterMethod" is-config="true" duration-ms="1100" started-at="2021-08-30T12:33:04Z" finished-at="2021-08-30T12:33:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.DropDwnTest@503ecb24]" name="beforeMethod" is-config="true" duration-ms="4368" started-at="2021-08-30T12:33:05Z" finished-at="2021-08-30T12:33:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyDropDownTest(java.lang.String)[pri:0, instance:tests.DropDwnTest@503ecb24]" name="verifyDropDownTest" duration-ms="1149" started-at="2021-08-30T12:33:10Z" description="verify whether user is able to select dropdown options or not" data-provider="dropdownOptions" finished-at="2021-08-30T12:33:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.DropDwnTest@503ecb24]" name="afterMethod" is-config="true" duration-ms="1209" started-at="2021-08-30T12:33:11Z" finished-at="2021-08-30T12:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.DropDwnTest -->
    </test> <!-- form-MediaTest -->
  </suite> <!-- Measurable-form-Suite -->
</testng-results>
